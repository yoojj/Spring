<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

<!--  
# Servlet WebApplication Context (WAC)
: org.springframework.web.servlet.DispatcherServlet 의해 생성  

: 정의되는 서블릿 별로 컨테이너가 생성되고 각 컨테이너는 독립적이며 Root WAC를 공유 
 
-->


	
	<context:component-scan base-package="ex.spring.framework" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>



	<mvc:annotation-driven />
	<!--
	: @RequestMapping @ResponseBody @RequestParam @PathParam @ResponseBody
	: @Valid @NumberFormat @DateTimeFormat

	: Spring MVC 관련 어노테이션 활성화
	: annotation-driven을 선언하지 않아도 component-scan을 통해 기본적인 어노테이션 사용 가능
	: annotation-driven은 추가 기능을 위해 적용  
	-->



	<mvc:default-servlet-handler />
	<!-- 
	DefaultServletHttpRequestHandler
	: DispatcherServlet이 처리하지 못한 요청을 DefaultServlet에 넘겨주기 위한 핸들러
	: mvc:resources 사용시 생략 가능   
	
	! JavaConfig에서는 DefaultServletHandlerConfigurer 사용 
	-->



	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/js/**" location="/resources/js" />
	<!--
	: 정적 리소스 제공
	: 리소스 요청 경로와 리소스 저장 경로를 매핑   
	
	: HTTP 캐시 설정 제공 
	: HTTP Last-Modified 정보를 통해 리소스 응답을 관리     
		
	! JavaConfig에서는 ResourceHandlerRegistry 사용 
	! 캐시를 세밀하게 제어할 경우 CacheControl 사용  
	-->



	<!--
	<beans profile="dev"></beans>
	<beans profile="prod"></beans>
	: 프로파일 설정 
	: 프로파일이 지정되지 않으면 기본으로 활성화 상태    
	-->		

	

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!--  
	ViewResolver 

	
	- UrlBasedViewResolver
	- InternalResourceViewResolver
	- XmlViewResolver
	- ResourceBundleViewResolver
	- BeanNameViewResolver
	
	- TilesViewResolver 
	- VelocityViewResolver
	- FreeMarkerViewResolver
	- ... 
	
	-->



</beans>